[tool.poetry]
name = "PSNAWP"
version = "2.1.0"
description = "Python API Wrapper for PlayStation Network API"
authors = ["isFakeAccount <trevorphillips@gmx.us>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/isFakeAccount/psnawp"
repository = "https://github.com/isFakeAccount/psnawp"
documentation = "https://psnawp.readthedocs.io/en/latest/"
keywords = ["PSN", "PlayStation"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
packages = [{ include = "psnawp_api", from = "src" }]

[tool.poetry.dependencies]
python = "^3.9"
attrs = "23.2.0"
requests = "^2.32.3"
typing-extensions = "^4.12.2"
requests-ratelimiter = "^0.7.0"
pyright = "^1.1.370"

[tool.poetry.group.typing.dependencies]
mypy = "^1.10.1"
types-requests = "^2.31.0.6"

[tool.poetry.group.linting.dependencies]
ruff = "^0.5.1"
pre-commit = "^3.7.1"

[tool.poetry.group.docs.dependencies]
sphinx = "^7.3.7"
furo = "^2024.04.27"
myst-parser = { extras = ["linkify"], version = "^3.0.1" }

[tool.poetry.group.tests.dependencies]
pytest = "^8.2.2"
python-dotenv = "^1.0.1"
vcrpy = "^6.0.1"
pytest-cov = "^5.0.0"
pytest-vcr = "^1.0.2"
jsonschema = "^4.23.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
addopts = "--cov=psnawp_api --cov-report html --junitxml=pytest.xml"
testpaths = ["tests"]

[tool.coverage.report]
exclude_also = [
    "if TYPE_CHECKING:",
    "@overload",
    "raise NotImplementedError",
    "__repr__",
    "__str__",
]


[tool.mypy]
strict = true
check_untyped_defs = true
disallow_any_generics = true
no_implicit_optional = true
show_error_codes = true
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
no_implicit_reexport = true

[tool.pyright]
exclude = [".venv", "venv"]
pythonVersion = "3.11"
typeCheckingMode = "strict"
reportPrivateUsage = false

[tool.black]
line-length = 160

[tool.ruff]
line-length = 160

[tool.ruff.lint]
select = ["E", "F", "I001", "I002", "TID252"]

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 88
